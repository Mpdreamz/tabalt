<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ListViewItemSelectedPointerOverBackgroundThemeBrush" Color="Black" />
    <SolidColorBrush x:Key="ListViewItemPointerOverBackgroundThemeBrush" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="ListViewItemSelectedPointerOverBorderThemeBrush" Color="#56c2ff" />
    <SolidColorBrush x:Key="ListViewItemSelectedBackgroundThemeBrush" Color="Black" />

    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Red"/>

    <SolidColorBrush x:Key="GridViewItemSelectedPointerOverBackgroundThemeBrush" Color="Black" />
    <SolidColorBrush x:Key="GridViewItemPointerOverBackgroundThemeBrush" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="GridViewItemSelectedPointerOverBorderThemeBrush" Color="#56c2ff" />
    <SolidColorBrush x:Key="GridViewItemSelectedBackgroundThemeBrush" Color="Black" />

    <LinearGradientBrush x:Key="WindowFrameBrush" StartPoint="0,0" EndPoint="0,1" SpreadMethod="Reflect">
        <GradientStop Color="#FFDBDBDB" Offset="0.4"/>
        <GradientStop Color="#FFCBC8C8" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WindowFrameBorderBrush" StartPoint="0,0" EndPoint="0,1" SpreadMethod="Reflect">
        <GradientStop Color="#FFCBC8C8" Offset="0.4"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="EntryFrameBrush" StartPoint="0,0" EndPoint="0,1" SpreadMethod="Reflect">
        <GradientStop Color="Black" Offset="0.4"/>
        <GradientStop Color="#FF272727" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="EntryFrameBorderBrush" StartPoint="0,0" EndPoint="0,1" SpreadMethod="Reflect">
        <GradientStop Color="Black" Offset="0.4"/>
    </LinearGradientBrush>
    <SolidColorBrush  x:Key="EntryBorderBrush" Color="Transparent" />


    <LinearGradientBrush x:Key="ResultListBrush" StartPoint="0,0" EndPoint="0,1" SpreadMethod="Reflect">
        <GradientStop Color="Black" Offset="0.1"/>
        <GradientStop Color="Black" Offset="0.2"/>
   </LinearGradientBrush>

    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="GridHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <TextBlock Text="{TemplateBinding Content}" Padding="5,3,0,4" Width="{TemplateBinding Width}" TextAlignment="Left">
                                <TextBlock.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.4" Color="#FFF2F2F2" />
                                        <GradientStop Offset="1.0" Color="#FFCCCFD1" />
                                    </LinearGradientBrush>
                                </TextBlock.Background>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Green" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.4" Color="#FFF2F2F2" />
                    <GradientStop Offset="1.0" Color="#FFCCCFD1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- SCROLLBAR TEMPLATES -->
    <Style x:Key="Scrollbar_LineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">

                    <ContentPresenter x:Name="ContentSite" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontSize" Value="6pt" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Lucida Sans" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ScrollBar_TrackRepeater"  TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Command" Value="ScrollBar.PageUpCommand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBar_UpTrack" 
       BasedOn="{StaticResource ScrollBar_TrackRepeater}" 
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Command" Value="ScrollBar.PageUpCommand" />
    </Style>
    <Style x:Key="ScrollBar_DownTrack" 
       BasedOn="{StaticResource ScrollBar_TrackRepeater}" 
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Command" Value="ScrollBar.PageDownCommand" />
    </Style>


    <Style x:Key="ScrollBar_LeftTrack" 
       BasedOn="{StaticResource ScrollBar_TrackRepeater}" 
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Command" Value="ScrollBar.PageLeftCommand" />
    </Style>

    <Style x:Key="ScrollBar_RightTrack" 
       BasedOn="{StaticResource ScrollBar_TrackRepeater}" 
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Command" Value="ScrollBar.PageRightCommand" />
    </Style>

    <Style x:Key="ScrollBar_VerticalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="6" 
          BorderBrush="Transparent"     
          BorderThickness="0" 
          Background="{DynamicResource VerticalScrollGradient}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="10" />
    </Style>


    <Style x:Key="ScrollBar_HorizontalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="6" 
          BorderBrush="Transparent"     
          BorderThickness="0" 
          Background="Gray" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Margin" Value="0,20,0,0" />
        <!--Define a default vertical ScrollBar template with 
      2 RepeatButtons and Track-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="12"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12" />
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="12" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" BorderThickness="0" Background="Transparent" CornerRadius="4"/>
                        <RepeatButton Grid.Row="0" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineUpCommand" Content=" ^" />

                        <!--IsDirectionReversed set to true draws a ScrollBar with a 
              Track whose lowest value is at the bottom.
              The default orientation of a ScrollBar is for the Track
              values to decrease from top to bottom.-->
                        <Track Grid.Row="1" Name="PART_Track"
                 IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource ScrollBar_UpTrack}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBar_HorizontalThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource ScrollBar_DownTrack}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="2" Style="{DynamicResource Scrollbar_LineButton}" Command="ScrollBar.LineDownCommand" Content=" v" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal" >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="MinHeight" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="12"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="12" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="1" BorderThickness="0" 
                    Background="Transparent" CornerRadius="4"/>
                                <RepeatButton Grid.Column="0" 
                            Style="{DynamicResource Scrollbar_LineButton}" 									
                            Command="ScrollBar.LineLeftCommand" Content=" &lt;" />
                                <Track Grid.Column="1" Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{DynamicResource ScrollBar_LeftTrack}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBar_HorizontalThumb}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{DynamicResource ScrollBar_RightTrack}"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                                <RepeatButton Grid.Column="2" 
                            Style="{DynamicResource Scrollbar_LineButton}" 									
                            Command="ScrollBar.LineRightCommand" Content=" &gt;" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- BUTTON TEMPLATE -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OuterBorder"
          CornerRadius="3" 
          Background="{DynamicResource ButtonGradient}">
                        <Border
            x:Name="InnerBorder"
            CornerRadius="3"
            Background="VerticalGradient Transparent #33000000"
            Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentSite" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="InnerBorder" Property="Background" 
                    Value="VerticalGradient #10000000 #20000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="InnerBorder" Property="Background" 
                    Value="VerticalGradient #50302A90 #40201040"  />
                            <Setter Property="BorderBrush" Value="Silver"  />
                            <Setter Property="Foreground" Value="SlateGray"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="18" />
        <Setter Property="Foreground" Value="MidnightBlue" />
    </Style>



</ResourceDictionary>